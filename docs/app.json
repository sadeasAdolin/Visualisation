[{"name":"app.R","content":"  \nlibrary(shiny)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(zoo)\nlibrary(plotly)\nlibrary(colorspace)  # ggplot2 dependency\nlibrary(munsell)     # ggplot2 dependency\nsource(\"busa_helpers.R\")\n\n# Declare NSE globals for dplyr/ggplot to satisfy linters\nutils::globalVariables(c(\n  \"building_m\", \"engineering_m\", \"gdp_growth\", \"cpi_inflation\", \"cash_rate\",\n  \"value\", \"series\", \"value_millions\", \"value_m\", \"sector\", \"public_m\",\n  \"private_m\", \"owner\", \"public_share\", \"approvals\", \"industry\", \"aug_2024\",\n  \"is_construction\", \"idx_sa\", \"idx_trend\", \"index\", \"time_period\", \"date\",\n  \"year\", \"total_m\", \"reference_month\", \"component\", \"yoy_pct\", \"dw_value_b\",\n  \"pct_change_sa\", \"idx_sa_scaled\", \"idx_tr_scaled\", \"aug_2019\", \"month_lab\"\n))\n\n# --- Helpers ---\nparse_quarter_date <- function(q) {\n  # Convert strings like \"2023-Q1\" to Date at quarter start\n  as.Date(zoo::as.yearqtr(gsub(\"-\", \" \", q)))\n}\n\n# Plotly utility: clean up legend names like \"(GDP,1)\" => \"GDP\"\nfix_plotly_legend_names <- function(pl) {\n  if (!is.null(pl$x$data)) {\n    for (i in seq_along(pl$x$data)) {\n      nm <- pl$x$data[[i]]$name\n      if (!is.null(nm)) {\n        nm2 <- gsub(\"[()]\", \"\", nm)\n        nm2 <- sub(\",?1$\", \"\", nm2)\n        pl$x$data[[i]]$name <- nm2\n      }\n    }\n  }\n  # Ensure expected legend interactions: single-click toggles, double-click isolates\n  pl <- plotly::layout(\n    pl,\n    legend = list(\n      itemclick = \"toggle\",\n      itemdoubleclick = \"toggleothers\",\n      groupclick = \"toggleitem\"\n    )\n  )\n  pl\n}\n\nto_plotly <- function(p, tooltip) {\n  fix_plotly_legend_names(ggplotly(p, tooltip = tooltip))\n}\n\ndata_dir <- \"data\"\n\n# Load via helpers (mirroring ARBE transformations)\nmacro_df <- load_macro_indicators(data_dir) %>% mutate(year = year(date))\ngdp_contrib <- load_gdp_contributions(data_dir)\ngdp_growth <- load_gdp_growth(data_dir)\ncpi_long <- load_cpi_goods_services(data_dir)\ndw_rents <- load_dwelling_vs_rents(data_dir)\ngva_df <- load_gva(data_dir)\ncwd <- load_cwd_quarterlies(data_dir)\ncwd_total_q <- cwd$total %>% mutate(year = year(date), value_millions = value_m / 1000)\ncwd_building_q <- cwd$building %>% mutate(year = year(date)) %>% rename(building_m = value_m)\ncwd_engineering_q <- cwd$engineering %>% mutate(year = year(date)) %>% rename(engineering_m = value_m)\ncwd_pub_priv_q <- load_pub_priv_quarterly(data_dir) %>%\n  mutate(year = year(date), total_m = public_m + private_m, public_share = public_m / pmax(total_m, 1e-9))\napprovals_m <- load_building_approvals_monthly(data_dir) %>% mutate(year = year(date))\nturnover_df <- load_turnover_indicator(data_dir) %>% mutate(year = year(date))\nearnings_df <- load_earnings_industry(data_dir)\ncwd_fy <- load_cwd_fy(data_dir)\n\n# --- Ranges ---\nsafe_years <- c(\n  if (\"year\" %in% names(cwd_total_q)) cwd_total_q$year,\n  if (\"year\" %in% names(cwd_pub_priv_q)) cwd_pub_priv_q$year,\n  if (\"year\" %in% names(approvals_m)) approvals_m$year,\n  if (\"year\" %in% names(macro_df)) macro_df$year,\n  if (\"year\" %in% names(turnover_df)) turnover_df$year\n)\nyear_min <- min(safe_years, na.rm = TRUE)\nyear_max <- max(safe_years, na.rm = TRUE)\n\n# --- UI ---\nui <- fluidPage(\n  titlePanel(\"Dashboard\"),\n  tabsetPanel(\n        tabPanel(\n          \"Info\",\n          div(style = \"max-width:900px; margin:16px auto; line-height:1.6;\",\n              h3(\"How to use this dashboard\"),\n              tags$ul(\n                tags$li(\"Hover over charts to see detailed tooltips (exact values).\"),\n                tags$li(\"Use the legend: click to toggle a series; double-click to isolate it.\"),\n                tags$li(\"Filter all time-series with the Year Range slider at the bottom.\"),\n                tags$li(\"Macro Overview â†’ use the month filter to show a single month's bars across years.\"),\n                tags$li(\"Use the toolbar on each chart (top-right) to zoom, pan or download PNGs.\")\n              ),\n              hr(),\n              tags$p(\"Explore the tabs above for Macro, GDP, Prices & Housing, Sector and more.\")\n          )\n        ),\n        tabPanel(\n          \"Macro Overview\",\n          div(style = \"padding: 0 15px 6px;\",\n              selectInput(\n                \"macro_month_filter\",\n                label = \"Filter bars by month (optional)\",\n                choices = c(\"All months\", \"January\", \"February\", \"March\", \"April\"),\n                selected = \"All months\",\n                width = \"260px\"\n              )\n          ),\n          plotly::plotlyOutput(\"macro_gdp\", height = 260),\n          plotly::plotlyOutput(\"macro_cpi_rate\", height = 260)\n        ),\n        tabPanel(\n          \"GDP\",\n          plotly::plotlyOutput(\"gdp_contrib\", height = 320),\n          plotly::plotlyOutput(\"gdp_growth\", height = 320)\n        ),\n        tabPanel(\n          \"Prices & Housing\",\n          plotly::plotlyOutput(\"cpi_goods_services\", height = 280),\n          plotly::plotlyOutput(\"dwelling_vs_rents\", height = 300)\n        ),\n        tabPanel(\n          \"Sector Data\",\n          plotly::plotlyOutput(\"fy_total\", height = 280),\n          plotly::plotlyOutput(\"fy_sectors\", height = 280),\n          div(style = \"margin-top: 22px;\",\n              plotly::plotlyOutput(\"fy_public_share\", height = 260)\n          )\n        ),\n        tabPanel(\n          \"Public vs Private\",\n          plotly::plotlyOutput(\"pub_priv_levels\", height = 320),\n          div(style = \"padding: 0 15px;\",\n              checkboxInput(\"show_ci\", \"Show confidence interval\", value = TRUE)\n          ),\n          plotly::plotlyOutput(\"pub_share\", height = 320)\n        ),\n        tabPanel(\n          \"Approvals\",\n          plotly::plotlyOutput(\"approvals_trend\", height = 320),\n          plotly::plotlyOutput(\"approvals_yearly\", height = 280),\n          plotly::plotlyOutput(\"gva_annual\", height = 320)\n        ),\n        tabPanel(\n          \"Labour & Turnover\",\n          tags$div(style = \"text-align:left;\", plotly::plotlyOutput(\"earnings_bar\", height = 520, width = \"100%\")),\n          plotly::plotlyOutput(\"turnover_trend\", height = 360),\n          plotly::plotlyOutput(\"vacancies_lines\", height = 340)\n        )\n  ),\n  br(),\n  div(class = \"well well-sm\", style = \"padding:8px 12px; margin:6px 12px;\",\n      div(style = \"max-width:900px; margin:0 auto;\",\n          sliderInput(\n            \"year_range\", \"Year Range:\",\n            min = year_min, max = year_max, value = c(max(year_min, 2019), year_max), step = 1, sep = \"\", width = \"100%\"\n          )\n      )\n  )\n)\n\n# --- Server ---\nserver <- function(input, output, session) {\n  # Reactive filters\n  macro_re <- reactive({ macro_df %>% filter(year >= input$year_range[1], year <= input$year_range[2]) })\n  cwd_total_re <- reactive({ cwd_total_q %>% filter(year >= input$year_range[1], year <= input$year_range[2]) })\n  sectors_re <- reactive({\n    left_join(cwd_building_q, cwd_engineering_q, by = c(\"time_period\", \"date\", \"year\")) %>%\n      filter(year >= input$year_range[1], year <= input$year_range[2]) %>%\n      pivot_longer(c(building_m, engineering_m), names_to = \"sector\", values_to = \"value_m\")\n  })\n  pub_priv_re <- reactive({ cwd_pub_priv_q %>% filter(year >= input$year_range[1], year <= input$year_range[2]) })\n  approvals_re <- reactive({ approvals_m %>% filter(year >= input$year_range[1], year <= input$year_range[2]) })\n  approvals_yearly <- reactive({\n    # Prefer pre-aggregated calendar-year totals to match original PNG\n    path_cy <- file.path(data_dir, \"building_approvals_calendar_year.csv\")\n    if (file.exists(path_cy)) {\n      readr::read_csv(path_cy, show_col_types = FALSE) %>%\n        janitor::clean_names() %>%\n        filter(year >= input$year_range[1], year <= input$year_range[2])\n    } else {\n      # Fallback: aggregate monthly to calendar year\n      path_m <- file.path(data_dir, \"building_approvals_monthly.csv\")\n      if (file.exists(path_m)) {\n        readr::read_csv(path_m, show_col_types = FALSE) %>%\n          janitor::clean_names() %>%\n          transmute(date = lubridate::ym(time_period), approvals = as.numeric(obs_value)) %>%\n          mutate(year = lubridate::year(date)) %>%\n          group_by(year) %>% summarise(dwellings_approved = sum(approvals, na.rm = TRUE), .groups = \"drop\") %>%\n          filter(year >= input$year_range[1], year <= input$year_range[2])\n      } else tibble::tibble()\n    }\n  })\n  turnover_re <- reactive({ turnover_df %>% filter(year >= input$year_range[1], year <= input$year_range[2]) })\n\n  # Macro plots\n  output$gdp_contrib <- renderPlotly({\n    df <- gdp_contrib %>% filter(!is.na(date), date >= as.Date(\"2020-01-01\"))\n    df_long <- df %>% pivot_longer(cols = c(private_demand, net_trade, public_demand), names_to = \"component\", values_to = \"ppt\") %>%\n      mutate(component = recode(component,\n        private_demand = \"Private demand\",\n        net_trade = \"Net trade\",\n        public_demand = \"Public demand\"\n      ))\n    p <- ggplot() +\n      geom_col(data = df_long, aes(x = date, y = ppt, fill = component), width = 25) +\n      geom_line(data = df, aes(x = date, y = gdp_ppt, color = \"GDP\"), linewidth = 1.2) +\n      scale_fill_manual(values = c(\"Private demand\" = \"#899DBA\", \"Net trade\" = \"#F5B041\", \"Public demand\" = \"#C0392B\")) +\n      scale_color_manual(values = c(\"GDP\" = \"#2E86AB\"), guide = \"legend\") +\n      labs(title = \"Contributions to quarterly growth in GDP\",\n           x = \"Quarterly\", y = \"ppt\", fill = NULL, color = NULL) +\n      theme_minimal() + theme(legend.position = \"bottom\") +\n      scale_x_date(date_breaks = \"6 months\", date_labels = \"%b-%y\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"fill\",\"color\")))\n  })\n\n  output$gdp_growth <- renderPlotly({\n    df <- gdp_growth %>% filter(!is.na(date), date >= as.Date(\"2020-01-01\"))\n    p <- ggplot(df, aes(x = date)) +\n      geom_col(aes(y = qoq_pct, fill = \"Quarterly growth\"), width = 25) +\n      geom_line(aes(y = tty_pct, color = \"Through the year\"), linewidth = 1.2) +\n      scale_fill_manual(values = c(\"Quarterly growth\" = \"#5DADE2\")) +\n      scale_color_manual(values = c(\"Through the year\" = \"#154360\")) +\n      labs(title = \"Gross domestic product (chain volume, SA)\", x = \"Quarterly\", y = \"%\", fill = NULL, color = NULL) +\n      theme_minimal() + theme(legend.position = \"bottom\") +\n      scale_x_date(date_breaks = \"6 months\", date_labels = \"%b-%y\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"fill\",\"color\")))\n  })\n  output$macro_gdp <- renderPlotly({\n    df <- macro_re() %>%\n      mutate(month_lab = factor(month(date, label = TRUE, abbr = TRUE), levels = month.abb),\n             month_full = factor(month(date, label = TRUE, abbr = FALSE), levels = month.name))\n    # Optional filter by month\n    if (!is.null(input$macro_month_filter) && input$macro_month_filter != \"All months\") {\n      df <- df %>% filter(month_full == input$macro_month_filter)\n    }\n    p <- ggplot(df, aes(date, gdp_growth, fill = month_lab)) +\n      geom_col(width = 25) +\n      geom_hline(yintercept = 0, linetype = \"dashed\", color = \"grey50\") +\n      scale_fill_brewer(palette = \"Set3\", name = \"Month\") +\n      scale_y_continuous(labels = label_number(accuracy = 0.1)) +\n      scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +\n      labs(title = \"GDP growth (%)\", x = \"Year\", y = \"%\") +\n      theme_minimal() + theme(legend.position = \"bottom\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"fill\")))\n  })\n\n  output$macro_cpi_rate <- renderPlotly({\n    df <- macro_re() %>%\n      select(date, cpi_inflation, cash_rate) %>%\n      pivot_longer(-date, names_to = \"series\", values_to = \"value\") %>%\n      mutate(series = recode(series,\n                             cpi_inflation = \"CPI Inflation\",\n                             cash_rate = \"Cash Rate\"))\n    p <- ggplot(df, aes(date, value, color = series)) +\n      geom_line(linewidth = 1) +\n      scale_color_manual(values = c(\"CPI Inflation\" = \"#f46d43\", \"Cash Rate\" = \"#1a9850\"),\n                         breaks = c(\"CPI Inflation\", \"Cash Rate\"), name = NULL) +\n      scale_y_continuous(labels = label_number(accuracy = 0.1)) +\n      labs(title = \"Inflation and Cash Rate\", x = \"Year\", y = \"%\") +\n      theme_minimal() + theme(legend.position = \"bottom\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"series\")))\n  })\n\n  # Construction FY (ARBE-style)\n  output$fy_total <- renderPlotly({\n    df <- cwd_fy\n    p <- ggplot(df, aes(year, total_b)) +\n      geom_line(linewidth = 1.2, color = \"#253494\") +\n      geom_point(size = 2, color = \"#253494\") +\n      scale_y_continuous(labels = label_dollar(prefix = \"$\", suffix = \"B\", accuracy = 0.1)) +\n      scale_x_continuous(breaks = df$year) +\n      labs(title = \"Total Construction Work Done (FY, CVM SA)\", x = \"Year\", y = \"AUD billions\") +\n      theme_minimal()\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\")))\n  })\n\n  output$fy_sectors <- renderPlotly({\n    df <- cwd_fy %>% select(year, building_b, engineering_b) %>% pivot_longer(-year, names_to = \"sector\", values_to = \"value_b\") %>%\n      mutate(sector = recode(sector, building_b = \"Residential Building\", engineering_b = \"Engineering\"))\n    p <- ggplot(df, aes(year, value_b, color = sector)) +\n      geom_line(linewidth = 1.2) +\n      geom_point(size = 2) +\n      scale_y_continuous(labels = label_dollar(prefix = \"$\", suffix = \"B\", accuracy = 0.1)) +\n      scale_x_continuous(breaks = cwd_fy$year) +\n      labs(title = \"Construction Sector Performance (FY, CVM SA)\", x = \"Year\", y = \"AUD billions\", color = NULL) +\n      theme_minimal() + theme(legend.position = \"bottom\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"sector\")))\n  })\n\n  output$fy_public_share <- renderPlotly({\n    # Show a pie for the most relevant FY within the selected range\n    yr_sel <- min(max(cwd_fy$year, na.rm = TRUE), input$year_range[2])\n    latest <- cwd_fy %>% filter(year == yr_sel)\n    if (nrow(latest) == 0) return(NULL)\n    vals <- c(as.numeric(latest$public_share), as.numeric(100 - latest$public_share))\n    labs <- c(\"Public\", \"Private\")\n    plotly::plot_ly(\n      labels = labs,\n      values = vals,\n      type = \"pie\",\n      textinfo = \"label+percent\",\n      insidetextorientation = \"radial\",\n      marker = list(colors = c(\"#2E86AB\", \"#A23B72\"))\n    ) %>%\n      plotly::layout(title = list(text = paste0(\"Public vs Private Sector Construction (FY \", yr_sel, \")\")),\n                     showlegend = TRUE)\n  })\n\n  # Public vs Private\n  output$pub_priv_levels <- renderPlotly({\n    df <- pub_priv_re() %>% select(date, public_m, private_m) %>% pivot_longer(-date, names_to = \"owner\", values_to = \"value_m\") %>%\n      mutate(owner = recode(owner, private_m = \"Private\", public_m = \"Public\"),\n             value_b = value_m / 1000)\n    p <- ggplot(df, aes(date, value_b, color = owner)) +\n      geom_line(linewidth = 1) +\n      scale_y_continuous(labels = label_dollar(prefix = \"$\", suffix = \"B\", accuracy = 0.1)) +\n      scale_color_manual(values = c(\"Private\" = \"#d95f02\", \"Public\" = \"#1b9e77\"),\n                         breaks = c(\"Private\",\"Public\"), name = NULL) +\n      labs(title = \"Value of Construction Work Done\", x = \"Year\", y = \"AUD billions\") +\n      theme_minimal() + theme(legend.position = \"bottom\") +\n      scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"owner\")))\n  })\n\n  output$pub_share <- renderPlotly({\n    df <- pub_priv_re()\n    p <- ggplot(df, aes(date, public_share)) +\n      geom_point(color = \"#1b9e77\", size = 2, alpha = 0.6) +\n      geom_smooth(method = \"lm\", se = input$show_ci, color = \"#1b9e77\", fill = \"#1b9e77\", alpha = 0.2) +\n      scale_y_continuous(labels = percent_format(accuracy = 0.1)) +\n      labs(title = \"Public Share of Total Construction Work Done\", x = \"Year\", y = \"Share of total\") +\n      theme_minimal() +\n      scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\")))\n  })\n\n  # Approvals (monthly boxplot across years by calendar month)\n  output$approvals_trend <- renderPlotly({\n    df <- approvals_re() %>%\n      mutate(\n        month_lab = factor(month(date, label = TRUE, abbr = TRUE), levels = month.abb)\n      )\n    p <- ggplot(df, aes(x = month_lab, y = approvals)) +\n      geom_boxplot(outlier.alpha = 0.5, width = 0.7,\n                   fill = \"#FFF3BF\", color = \"#000000\") +\n      labs(title = \"Building Approvals (Monthly box plot by calendar month 2021-2025)\",\n           x = \"Month\", y = \"Approvals\") +\n      theme_minimal()\n    plt <- fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\")))\n    # Add legend entries explaining quartiles\n    plt <- plt %>%\n      plotly::add_trace(x = c(NA), y = c(NA), type = \"scatter\", mode = \"markers\",\n                        marker = list(color = \"#FFF3BF\"), name = \"Q1 (first quartile)\") %>%\n      plotly::add_trace(x = c(NA), y = c(NA), type = \"scatter\", mode = \"markers\",\n                        marker = list(color = \"#FFF3BF\"), name = \"Q3 (third quartile)\")\n    plt\n  })\n\n  output$gva_annual <- renderPlotly({\n    if (nrow(gva_df) == 0) return(NULL)\n    df <- gva_df\n    p <- ggplot(df, aes(date, total)) +\n      geom_line(linewidth = 1.2, color = \"#333333\") +\n      labs(title = \"Construction GVA (CVM annual)\", x = \"Year\", y = \"$m CVM\") +\n      theme_minimal()\n    ggplotly(p, tooltip = c(\"x\",\"y\"))\n  })\n\n  # Building approvals (calendar year totals)\n  output$approvals_yearly <- renderPlotly({\n    df <- approvals_yearly()\n    if (nrow(df) == 0) return(NULL)\n    p <- ggplot(df, aes(x = year, y = dwellings_approved)) +\n      geom_line(linewidth = 1.2, color = \"#1B9E77\") +\n      geom_point(size = 2.2, color = \"#1B9E77\") +\n      labs(title = \"Dwellings Approved (Calendar Year)\",\n           subtitle = \"ABS 8731.0 (BA_SA2) â€“ monthly counts aggregated to year\",\n           x = \"Year\", y = \"Dwellings approved\") +\n      theme_minimal()\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\")))\n  })\n\n  # Labour & Turnover\n  output$earnings_bar <- renderPlotly({\n    # highlight Construction relative to others\n    df <- earnings_df %>% mutate(Aug_2019 = aug_2019, Aug_2024 = aug_2024) %>%\n      select(industry, Aug_2019, Aug_2024) %>%\n      tidyr::pivot_longer(cols = c(Aug_2019, Aug_2024), names_to = \"period\", values_to = \"aud\") %>%\n      filter(!is.na(aud) & is.finite(aud) & aud > 0, industry != \"\")\n    order_24 <- df %>% filter(period == \"Aug_2024\") %>% arrange(aud) %>% pull(industry)\n    df$industry <- factor(df$industry, levels = order_24)\n    x_max <- ceiling(max(df$aud, na.rm = TRUE) / 100) * 100\n    p <- ggplot(df, aes(x = aud, y = industry, fill = period)) +\n      geom_col(position = position_dodge(width = 0.8), width = 0.75) +\n      scale_fill_manual(values = c(\"Aug_19\" = \"#5DADE2\", \"Aug_2019\" = \"#5DADE2\", \"Aug_2024\" = \"#1F618D\"), guide = \"legend\") +\n      labs(title = \"Median weekly earnings in main job, by industry\",\n           subtitle = \"Aug-19 vs Aug-24 (AUD)\", x = \"Weekly Earnings ($)\", y = NULL, fill = NULL) +\n      scale_x_continuous(limits = c(0, x_max), breaks = seq(0, x_max, by = 100),\n                         labels = scales::label_number(accuracy = 1, big.mark = \"\")) +\n      theme_minimal() + theme(legend.position = \"bottom\")\n    ggplotly(p, tooltip = c(\"x\",\"y\"))\n  })\n\n  output$turnover_trend <- renderPlotly({\n    df <- turnover_re()\n    \n    # Calculate proper range for right y-axis (index values)\n    min_idx <- min(c(df$idx_sa, df$idx_trend), na.rm = TRUE)\n    max_idx <- max(c(df$idx_sa, df$idx_trend), na.rm = TRUE)\n    idx_range <- c(floor(min_idx/5)*5, ceiling(max_idx/5)*5)\n    \n    # Create plotly dual-axis plot\n    fig <- plot_ly(df, x = ~date)\n    \n    # Add bars for monthly % change (left y-axis)\n    fig <- fig %>%\n      add_bars(y = ~pct_change_sa, name = \"Monthly % change\",\n               marker = list(color = \"#F39C12\", opacity = 0.8),\n               yaxis = \"y\")\n    \n    # Add line for Index SA (right y-axis)\n    fig <- fig %>%\n      add_lines(y = ~idx_sa, name = \"Index (SA)\",\n                line = list(color = \"#7FB3D5\", width = 2),\n                yaxis = \"y2\")\n    \n    # Add line for Index trend (right y-axis)\n    fig <- fig %>%\n      add_lines(y = ~idx_trend, name = \"Index (trend)\",\n                line = list(color = \"#1F618D\", width = 2),\n                yaxis = \"y2\")\n    \n    # Configure dual y-axes\n    fig <- fig %>%\n      layout(\n        title = list(text = \"Construction, turnover indicator\", x = 0, xanchor = \"left\"),\n        xaxis = list(\n          title = list(text = \"Month\", standoff = 20)\n        ),\n        yaxis = list(\n          title = \"%\",\n          side = \"left\"\n        ),\n        yaxis2 = list(\n          title = \"\",\n          overlaying = \"y\",\n          side = \"right\",\n          range = idx_range,\n          dtick = 5\n        ),\n        legend = list(orientation = \"h\", x = 0.5, xanchor = \"center\", y = -0.2),\n        hovermode = \"x unified\",\n        margin = list(b = 80, r = 60, l = 60)\n      )\n    \n    fig\n  })\n\n  # Vacancies by industry (inline tibble as per ARBE script)\n  output$vacancies_lines <- renderPlotly({\n    quarters <- factor(c(\"Feb-2024\",\"May-2024\",\"Aug-2024\",\"Nov-2024\",\"Feb-2025\",\"May-2025\"),\n                       levels = c(\"Feb-2024\",\"May-2024\",\"Aug-2024\",\"Nov-2024\",\"Feb-2025\",\"May-2025\"))\n    vac_df <- tibble(\n      quarter = quarters,\n      Mining = c(10.7, 8.5, 8.4, 9.6, 10.3, 10.0),\n      Manufacturing = c(23.3, 16.4, 14.7, 14.8, 18.2, 19.6),\n      `Electricity, gas, water & waste` = c(4.6, 4.5, 4.3, 4.5, 3.9, 3.4),\n      Construction = c(27.9, 24.9, 25.1, 22.2, 18.5, 22.3)\n    )\n    vac_long <- vac_df %>% pivot_longer(-quarter, names_to = \"industry\", values_to = \"vacancies_k\")\n    p <- ggplot(vac_long, aes(x = quarter, y = vacancies_k, color = industry, group = industry)) +\n      geom_line(linewidth = 1.1) + geom_point(size = 2) +\n      labs(title = \"Job Vacancies by Industry\", subtitle = \"ABS May 2025\",\n           x = \"Quarter\", y = \"Vacancies ('000)\", color = \"Industry\") +\n      theme_minimal() + theme(legend.position = \"bottom\")\n    ggplotly(p, tooltip = c(\"x\",\"y\",\"color\"))\n  })\n\n  # Prices & Housing\n  output$cpi_goods_services <- renderPlotly({\n    # Filter by selected year range and match ARBE plotting style\n    yr0 <- input$year_range[1]; yr1 <- input$year_range[2]\n    df <- cpi_long %>%\n      filter(!is.na(date)) %>%\n      filter(lubridate::year(date) >= yr0, lubridate::year(date) <= yr1)\n    p <- ggplot(df, aes(date, yoy_pct, color = component)) +\n      geom_line(linewidth = 1.1) +\n      scale_y_continuous(labels = label_number(accuracy = 0.1)) +\n      scale_color_manual(values = c(\"Goods\" = \"#2E86AB\", \"Services\" = \"#A93226\"), name = NULL) +\n      labs(title = \"CPI: Goods vs Services â€“ annual movement\",\n           subtitle = \"Australia, 2020â€“2025 (quarterly observations)\", x = \"Quarterly\", y = \"% YoY\") +\n      theme_minimal() + theme(legend.position = \"bottom\") +\n      scale_x_date(date_breaks = \"6 months\", date_labels = \"%b-%y\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\",\"y\",\"component\")))\n  })\n\n  output$dwelling_vs_rents <- renderPlotly({\n    yr0 <- input$year_range[1]; yr1 <- input$year_range[2]\n    dw <- dw_rents$dw %>% filter(lubridate::year(date) >= yr0, lubridate::year(date) <= yr1)\n    rt <- dw_rents$rents %>% filter(lubridate::year(date) >= yr0, lubridate::year(date) <= yr1)\n    if (nrow(dw) == 0 || nrow(rt) == 0) return(NULL)\n    merged <- dw %>% left_join(rt, by = \"date\")\n    max_left <- max(merged$dw_value_b, na.rm = TRUE)\n    max_right <- max(merged$yoy_pct, na.rm = TRUE)\n    scale_factor <- ifelse(is.finite(max_left / max_right), max_left / max_right, 1)\n    p <- ggplot(merged, aes(date)) +\n      geom_line(aes(y = dw_value_b, color = \"Dwelling stock ($b)\"), linewidth = 1.1) +\n      geom_line(aes(y = yoy_pct * scale_factor, color = \"Rents YoY (%)\"), linewidth = 1.1, linetype = \"dashed\") +\n      scale_y_continuous(name = \"Total dwelling stock ($b)\", sec.axis = sec_axis(~ ./scale_factor, name = \"Rents YoY (%)\")) +\n      scale_color_manual(values = c(\"Dwelling stock ($b)\" = \"#1F618D\", \"Rents YoY (%)\" = \"#A04000\"), name = NULL) +\n      labs(title = \"Dwelling value vs Rents (YoY)\", x = \"Year\") +\n      theme_minimal() + theme(legend.position = \"bottom\")\n    fix_plotly_legend_names(ggplotly(p, tooltip = c(\"x\")))\n  })\n}\n\nshinyApp(ui, server)\n\n\n","type":"text"},{"name":"busa_helpers.R","content":"library(dplyr)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(stringr)\nlibrary(zoo)\n\n# Parsing helpers mirroring ARBE scripts\nparse_month_abb <- function(x) {\n  if (is.na(x) || !grepl(\"^[A-Za-z]{3}-[0-9]{2,4}$\", x)) return(NA)\n  mon <- match(substr(x, 1, 3), month.abb)\n  yr <- substr(x, 5, nchar(x))\n  yr_num <- as.integer(yr)\n  yr_full <- ifelse(nchar(yr) == 2, ifelse(yr_num >= 50, 1900 + yr_num, 2000 + yr_num), yr_num)\n  as.Date(sprintf(\"%04d-%02d-01\", yr_full, mon))\n}\n\nparse_quarter_str <- function(q) {\n  as.Date(zoo::as.yearqtr(gsub(\"-\", \" \", q)))\n}\n\nclean_num <- function(x) as.numeric(gsub(\"[^0-9.-]\", \"\", x))\n\n# appease linters for NSE columns\nutils::globalVariables(c(\n  \"gdp_ppt\",\"private_demand\",\"net_trade\",\"public_demand\",\"qoq_pct\",\"tty_pct\",\n  \"Goods\",\"Services\",\"dw_value_b\",\"yoy_pct\",\"time_period\",\"obs_value\",\n  \"reference_month\",\"aug_2019\",\"aug_2024\"\n))\n\n# Loaders following prevData/script logic\nload_macro_indicators <- function(data_dir) {\n  read_csv(file.path(data_dir, \"macro_indicators_final.csv\"), show_col_types = FALSE) %>%\n    clean_names() %>% mutate(date = as.Date(date))\n}\n\nload_gdp_contributions <- function(data_dir) {\n  path <- file.path(data_dir, \"Contributions to quarterly growth in GDP, chain volume measures, seasonally adjusted.csv\")\n  if (!file.exists(path)) return(tibble())\n  df <- read.csv(path, skip = 1, stringsAsFactors = FALSE, check.names = FALSE)\n  names(df) <- c(\"period\", \"gdp_ppt\", \"private_demand\", \"net_trade\", \"public_demand\")\n  df %>%\n    filter(!is.na(period) & !grepl(\"^Source:\", period)) %>%\n    mutate(date = sapply(period, parse_month_abb)) %>%\n    filter(!is.na(date)) %>%\n    select(date, gdp_ppt, private_demand, net_trade, public_demand)\n}\n\nload_gdp_growth <- function(data_dir) {\n  path <- file.path(data_dir, \"Gross domestic product, chain volume measures, seasonally adjusted.csv\")\n  if (!file.exists(path)) return(tibble())\n  df <- read.csv(path, skip = 1, stringsAsFactors = FALSE, check.names = FALSE)\n  names(df) <- c(\"period\", \"qoq_pct\", \"tty_pct\")\n  df %>%\n    filter(!is.na(period) & !grepl(\"^Source:\", period)) %>%\n    mutate(date = sapply(period, parse_month_abb)) %>%\n    filter(!is.na(date)) %>%\n    select(date, qoq_pct, tty_pct)\n}\n\nload_cpi_goods_services <- function(data_dir) {\n  path <- file.path(data_dir, \"CPI Goods and Services components, annual movement (%).csv\")\n  if (!file.exists(path)) return(tibble())\n  # File structure: title line, then a header line with an empty first column.\n  # Read as data (no header), skip first 2 lines, then assign clean names.\n  raw <- read.csv(path, header = FALSE, skip = 2, stringsAsFactors = FALSE, fill = TRUE, check.names = FALSE)\n  raw <- raw[, 1:3, drop = FALSE]\n  names(raw) <- c(\"period\", \"Goods\", \"Services\")\n  raw %>%\n    filter(!is.na(period) & period != \"\") %>%\n    mutate(date = as.Date(sapply(period, parse_month_abb), origin = \"1970-01-01\"),\n           Goods = clean_num(Goods), Services = clean_num(Services)) %>%\n    filter(!is.na(date)) %>%\n    select(date, Goods, Services) %>%\n    pivot_longer(c(Goods, Services), names_to = \"component\", values_to = \"yoy_pct\")\n}\n\nload_dwelling_vs_rents <- function(data_dir) {\n  dw_path <- file.path(data_dir, \"Total value of dwelling stock, Australia.csv\")\n  r_path  <- file.path(data_dir, \"Rents, quarterly and annual movement (%).csv\")\n  if (!file.exists(dw_path) || !file.exists(r_path)) return(list(dw = tibble(), rents = tibble()))\n  dw <- read.csv(dw_path, skip = 1, stringsAsFactors = FALSE, check.names = FALSE)\n  names(dw) <- c(\"period\", \"dw_value_b\")\n  dw <- dw %>% mutate(date = as.Date(sapply(period, parse_month_abb), origin = \"1970-01-01\"),\n                      dw_value_b = clean_num(dw_value_b)) %>%\n    filter(!is.na(date)) %>% select(date, dw_value_b)\n  r <- read.csv(r_path, skip = 1, stringsAsFactors = FALSE, check.names = FALSE)\n  names(r) <- c(\"period\", \"qoq_pct\", \"yoy_pct\")\n  r <- r %>% mutate(date = as.Date(sapply(period, parse_month_abb), origin = \"1970-01-01\"),\n                    yoy_pct = clean_num(yoy_pct)) %>%\n    filter(!is.na(date)) %>% select(date, yoy_pct)\n  list(dw = dw, rents = r)\n}\n\nload_cwd_quarterlies <- function(data_dir) {\n  total <- read_csv(file.path(data_dir, \"cwd_total_quarterly.csv\"), show_col_types = FALSE) %>% clean_names()\n  build <- read_csv(file.path(data_dir, \"cwd_building_quarterly.csv\"), show_col_types = FALSE) %>% clean_names()\n  eng   <- read_csv(file.path(data_dir, \"cwd_engineering_quarterly.csv\"), show_col_types = FALSE) %>% clean_names()\n  prep <- function(df) {\n    df %>% transmute(\n      time_period, date = parse_quarter_str(time_period),\n      value_m = as.numeric(obs_value)\n    )\n  }\n  list(\n    total = prep(total),\n    building = prep(build),\n    engineering = prep(eng)\n  )\n}\n\nload_pub_priv_quarterly <- function(data_dir) {\n  read_csv(file.path(data_dir, \"cwd_public_private_quarterly_merged.csv\"), show_col_types = FALSE) %>%\n    clean_names() %>% mutate(date = parse_quarter_str(time_period))\n}\n\nload_building_approvals_monthly <- function(data_dir) {\n  read_csv(file.path(data_dir, \"building_approvals_monthly.csv\"), show_col_types = FALSE) %>%\n    clean_names() %>% transmute(date = ym(time_period), approvals = as.numeric(obs_value))\n}\n\nload_turnover_indicator <- function(data_dir) {\n  path <- file.path(data_dir, \"Construction, turnover indicator.csv\")\n  if (!file.exists(path)) return(tibble())\n  read_csv(path, skip = 1, show_col_types = FALSE) %>%\n    clean_names() %>%\n    # drop meta rows (e.g., Index base period, Source)\n    filter(!is.na(reference_month),\n           !grepl(\"^Index base\", reference_month, ignore.case = TRUE),\n           !grepl(\"^Source\", reference_month, ignore.case = TRUE)) %>%\n    # normalize column names to a stable set\n    rename_with(~\"idx_sa\", matches(\"business_turnover_index.*seasonally_adjusted.*pts\")) %>%\n    rename_with(~\"idx_trend\", matches(\"business_turnover_index.*trend.*pts\")) %>%\n    rename_with(~\"pct_change_sa\", matches(\"monthly_percentage_change.*seasonally_adjusted\")) %>%\n    mutate(date = my(reference_month))\n}\n\nload_earnings_industry <- function(data_dir) {\n  read_csv(file.path(data_dir, \"Median weekly earnings in main job, by industry.csv\"), skip = 1,\n           col_names = c(\"industry\",\"aug_2019\",\"aug_2024\"), show_col_types = FALSE) %>%\n    mutate(aug_2019 = readr::parse_number(aug_2019), aug_2024 = readr::parse_number(aug_2024)) %>%\n    # drop footnotes/metadata rows from the CSV\n    filter(!(is.na(aug_2019) & is.na(aug_2024))) %>%\n    filter(!grepl(\"^Source:\", industry), !grepl(\"^1\\\\.\", industry))\n}\n\nload_gva <- function(data_dir) {\n  path <- file.path(data_dir, \"gva.csv\")\n  if (!file.exists(path)) return(tibble())\n  df <- read_csv(path, show_col_types = FALSE)\n  names(df)[1] <- \"period\"\n  df %>%\n    mutate(date = as.Date(sapply(period, parse_month_abb), origin = \"1970-01-01\")) %>%\n    select(date, total = `Construction (E) ;`) %>%\n    filter(!is.na(date))\n}\n\n# FY loaders and ARBE-style plot builders\nload_cwd_fy <- function(data_dir) {\n  total <- read_csv(file.path(data_dir, \"cwd_total_fy.csv\"), show_col_types = FALSE) %>% clean_names()\n  build <- read_csv(file.path(data_dir, \"cwd_building_fy.csv\"), show_col_types = FALSE) %>% clean_names()\n  eng   <- read_csv(file.path(data_dir, \"cwd_engineering_fy.csv\"), show_col_types = FALSE) %>% clean_names()\n  pubpr <- read_csv(file.path(data_dir, \"cwd_public_private_fy.csv\"), show_col_types = FALSE) %>% clean_names()\n  df <- total %>%\n    separate(fy_label, into = c(\"fy_start\",\"fy_end_2\"), sep = \"-\", remove = FALSE) %>%\n    mutate(year = as.integer(fy_start), total_b = cwd_total_cvm_sa_millions / 1000) %>%\n    left_join(build, by = \"fy_label\") %>%\n    left_join(eng, by = \"fy_label\") %>%\n    left_join(pubpr, by = \"fy_label\") %>%\n    mutate(\n      building_b = building_cvm_sa_m / 1000,\n      engineering_b = engineering_cvm_sa_m / 1000,\n      public_b = public_tot_cvm_sa_m / 1000,\n      private_b = private_tot_cvm_sa_m / 1000,\n      public_share = ifelse(!is.na(public_b) & !is.na(total_b), 100 * public_b / total_b, NA_real_)\n    )\n  df\n}\n\n\n\n","type":"text"},{"name":"data/CPI Goods and Services components, annual movement (%).csv","content":"\"CPI Goods and Services components, annual movement (%)\",,\r\n,Goods (%),Services (%)\r\nJun-15,0.7,2.7\r\nSep-15,0.6,2.7\r\nDec-15,1.2,2.4\r\nMar-16,0.9,1.9\r\nJun-16,0.3,2\r\nSep-16,1,1.8\r\nDec-16,1.3,1.7\r\nMar-17,2.5,1.6\r\nJun-17,2,1.8\r\nSep-17,1.8,1.8\r\nDec-17,2.2,1.7\r\nMar-18,2,2\r\nJun-18,2.3,1.8\r\nSep-18,2.2,1.6\r\nDec-18,1.7,1.7\r\nMar-19,1.3,1.3\r\nJun-19,1.5,1.4\r\nSep-19,1.5,1.8\r\nDec-19,1.9,1.8\r\nMar-20,2.7,1.8\r\nJun-20,1.3,-2.2\r\nSep-20,1.8,-0.6\r\nDec-20,1.1,0.8\r\nMar-21,1.1,1.1\r\nJun-21,2.8,5.1\r\nSep-21,2.8,3.5\r\nDec-21,4.3,2.3\r\nMar-22,6.6,3\r\nJun-22,8.4,3.3\r\nSep-22,9.6,4.1\r\nDec-22,9.5,5.5\r\nMar-23,7.6,6.1\r\nJun-23,5.8,6.3\r\nSep-23,4.9,5.8\r\nDec-23,3.8,4.6\r\nMar-24,3.1,4.3\r\nJun-24,3.2,4.5\r\nSep-24,1.4,4.6\r\nDec-24,0.8,4.3\r\nMar-25,1.3,3.7\r\nJun-25,1.1,3.3\r\n,,\r\n,,\r\n,,\r\n,,\r\n\"Source: Australian Bureau of Statistics, Consumer Price Index, Australia June Quarter 2025\",,","type":"text"},{"name":"data/Construction, turnover indicator.csv","content":"\"Construction, turnover indicator\"\n\"Reference month\",\"Business turnover index, seasonally adjusted (pts)\",\"Business turnover index, trend (pts)\",\"Monthly percentage change, seasonally adjusted (%)\"\n\"Jul-23\",\"137.4\",\"132.4\",\"2.1\"\n\"Aug-23\",\"136.8\",\"133.6\",\"-0.4\"\n\"Sep-23\",\"139.5\",\"134.4\",\"1.9\"\n\"Oct-23\",\"138.6\",\"134.6\",\"-0.6\"\n\"Nov-23\",\"137.7\",\"134.6\",\"-0.7\"\n\"Dec-23\",\"139.9\",\"134.6\",\"1.7\"\n\"Jan-24\",\"137.1\",\"134.9\",\"-2.0\"\n\"Feb-24\",\"139.5\",\"135.2\",\"1.8\"\n\"Mar-24\",\"139.4\",\"135.7\",\"-0.1\"\n\"Apr-24\",\"141.7\",\"136.3\",\"1.6\"\n\"May-24\",\"141.3\",\"137.0\",\"-0.2\"\n\"Jun-24\",\"141.1\",\"138.1\",\"-0.1\"\n\"Jul-24\",\"142.0\",\"139.5\",\"0.6\"\n\"Aug-24\",\"144.8\",\"140.9\",\"1.9\"\n\"Sep-24\",\"148.8\",\"142.3\",\"2.8\"\n\"Oct-24\",\"148.6\",\"143.3\",\"-0.2\"\n\"Nov-24\",\"148.5\",\"144.1\",\"0.0\"\n\"Dec-24\",\"146.0\",\"144.5\",\"-1.7\"\n\"Jan-25\",\"148.8\",\"144.4\",\"1.9\"\n\"Feb-25\",\"150.2\",\"144.1\",\"0.9\"\n\"Mar-25\",\"149.5\",\"143.8\",\"-0.5\"\n\"Apr-25\",\"146.8\",\"143.4\",\"-1.8\"\n\"May-25\",\"146.0\",\"143.2\",\"-0.6\"\n\"Jun-25\",\"145.0\",\"143.1\",\"-0.7\"\n\"Jul-25\",\"150.5\",\"143.0\",\"3.8\"\n\n\"Index base period: July 2019 = 100.0.\"\n\n\"Source: Australian Bureau of Statistics, Monthly Business Turnover Indicator July 2025\"","type":"text"},{"name":"data/Contributions to quarterly growth in GDP, chain volume measures, seasonally adjusted.csv","content":"\"Contributions to quarterly growth in GDP, chain volume measures, seasonally adjusted\"\n,\"GDP (ppt)\",\"Private demand (ppt)\",\"Net trade (ppt)\",\"Public demand (ppt)\"\n\"Jun-17\",\"0.6\",\"0.1\",\"0.6\",\"0.6\"\n\"Sep-17\",\"0.9\",\"1.3\",\"-0.1\",\"-0.3\"\n\"Dec-17\",\"0.4\",\"0.4\",\"-0.6\",\"0.5\"\n\"Mar-18\",\"1.0\",\"0.7\",\"0.0\",\"0.3\"\n\"Jun-18\",\"0.7\",\"0.4\",\"0.2\",\"-0.1\"\n\"Sep-18\",\"0.4\",\"-0.1\",\"0.6\",\"0.6\"\n\"Dec-18\",\"0.2\",\"-0.1\",\"-0.1\",\"0.2\"\n\"Mar-19\",\"0.7\",\"0.0\",\"0.3\",\"0.3\"\n\"Jun-19\",\"0.3\",\"-0.2\",\"0.5\",\"0.5\"\n\"Sep-19\",\"0.6\",\"0.0\",\"0.1\",\"0.4\"\n\"Dec-19\",\"0.6\",\"0.1\",\"0.0\",\"0.3\"\n\"Mar-20\",\"-0.1\",\"-0.7\",\"0.4\",\"0.5\"\n\"Jun-20\",\"-6.8\",\"-7.6\",\"1.0\",\"0.2\"\n\"Sep-20\",\"3.5\",\"4.0\",\"-2.1\",\"0.8\"\n\"Dec-20\",\"3.4\",\"3.3\",\"0.1\",\"0.4\"\n\"Mar-21\",\"2.2\",\"1.9\",\"-0.1\",\"0.1\"\n\"Jun-21\",\"0.8\",\"0.9\",\"-1.1\",\"0.6\"\n\"Sep-21\",\"-1.7\",\"-2.2\",\"0.6\",\"0.8\"\n\"Dec-21\",\"3.5\",\"3.3\",\"-0.6\",\"0.2\"\n\"Mar-22\",\"1.0\",\"1.4\",\"-1.6\",\"0.7\"\n\"Jun-22\",\"1.0\",\"1.1\",\"0.4\",\"0.0\"\n\"Sep-22\",\"0.5\",\"0.5\",\"-0.9\",\"0.0\"\n\"Dec-22\",\"0.7\",\"0.4\",\"1.1\",\"0.2\"\n\"Mar-23\",\"0.5\",\"0.6\",\"-0.4\",\"0.2\"\n\"Jun-23\",\"0.4\",\"0.6\",\"0.4\",\"0.4\"\n\"Sep-23\",\"0.5\",\"0.0\",\"-0.3\",\"0.5\"\n\"Dec-23\",\"0.1\",\"0.3\",\"0.0\",\"0.0\"\n\"Mar-24\",\"0.2\",\"0.2\",\"-1.0\",\"0.3\"\n\"Jun-24\",\"0.1\",\"0.0\",\"-0.1\",\"0.3\"\n\"Sep-24\",\"0.3\",\"0.0\",\"0.1\",\"0.8\"\n\"Dec-24\",\"0.6\",\"0.5\",\"0.0\",\"0.1\"\n\"Mar-25\",\"0.3\",\"0.3\",\"-0.2\",\"-0.1\"\n\"Jun-25\",\"0.6\",\"0.5\",\"0.1\",\"0.0\"\n\n\"Source: Australian Bureau of Statistics, Australian National Accounts: National Income, Expenditure and Product June 2025\"","type":"text"},{"name":"data/Gross domestic product, chain volume measures, seasonally adjusted.csv","content":"\"Gross domestic product, chain volume measures, seasonally adjusted\"\n,\"Quarterly growth (%)\",\"Through the year (%)\"\n\"Jun-17\",\"0.6\",\"2.1\"\n\"Sep-17\",\"0.9\",\"3.0\"\n\"Dec-17\",\"0.4\",\"2.3\"\n\"Mar-18\",\"1.0\",\"3.0\"\n\"Jun-18\",\"0.7\",\"3.2\"\n\"Sep-18\",\"0.4\",\"2.6\"\n\"Dec-18\",\"0.2\",\"2.4\"\n\"Mar-19\",\"0.7\",\"2.1\"\n\"Jun-19\",\"0.3\",\"1.6\"\n\"Sep-19\",\"0.6\",\"1.8\"\n\"Dec-19\",\"0.6\",\"2.2\"\n\"Mar-20\",\"-0.1\",\"1.3\"\n\"Jun-20\",\"-6.8\",\"-5.8\"\n\"Sep-20\",\"3.5\",\"-3.0\"\n\"Dec-20\",\"3.4\",\"-0.3\"\n\"Mar-21\",\"2.2\",\"2.0\"\n\"Jun-21\",\"0.8\",\"10.3\"\n\"Sep-21\",\"-1.7\",\"4.8\"\n\"Dec-21\",\"3.5\",\"4.9\"\n\"Mar-22\",\"1.0\",\"3.6\"\n\"Jun-22\",\"1.0\",\"3.8\"\n\"Sep-22\",\"0.5\",\"6.1\"\n\"Dec-22\",\"0.7\",\"3.1\"\n\"Mar-23\",\"0.5\",\"2.7\"\n\"Jun-23\",\"0.4\",\"2.0\"\n\"Sep-23\",\"0.5\",\"2.1\"\n\"Dec-23\",\"0.1\",\"1.5\"\n\"Mar-24\",\"0.2\",\"1.2\"\n\"Jun-24\",\"0.1\",\"0.9\"\n\"Sep-24\",\"0.3\",\"0.8\"\n\"Dec-24\",\"0.6\",\"1.3\"\n\"Mar-25\",\"0.3\",\"1.4\"\n\"Jun-25\",\"0.6\",\"1.8\"\n\n\"Source: Australian Bureau of Statistics, Australian National Accounts: National Income, Expenditure and Product June 2025\"","type":"text"},{"name":"data/INCOME FROM SALES OF GOODS AND SERVICES.csv","content":"ï»¿Date,Sales quarterly percentage change ;  Total (State) ;  Construction ;  Chain Volume Measures ;  TOTAL (SCP_SCOPE) ;,,,,,,,,,\r\nMar-2020,-13.6,,,,,,,,,\r\nJun-2020,1.3,,,,,,,,,\r\nSep-2020,1.6,,,,,,,,,\r\nDec-2020,2.8,,,,,,,,,\r\nMar-2021,-10.4,,,,,,,,,\r\nJun-2021,18.9,,,,,,,,,\r\nSep-2021,-3.0,,,,,,,,,\r\nDec-2021,2.2,,,,,,,,,\r\nMar-2022,-12.7,,,,,,,,,\r\nJun-2022,15.9,,,,,,,,,\r\nSep-2022,-3.0,,,,,,,,,\r\nDec-2022,2.3,,,,,,,,,\r\nMar-2023,-14.7,,,,,,,,,\r\nJun-2023,17.6,,,,,,,,,\r\nSep-2023,-0.8,,,,,,,,,\r\nDec-2023,2.8,,,,,,,,,\r\nMar-2024,-16.4,,,,,,,,,\r\nJun-2024,18.4,,,,,,,,,\r\nSep-2024,-0.6,,,,,,,,,\r\nDec-2024,3.0,,,,,,,,,\r\nMar-2025,-15.5,,,,,,,,,\r\nJun-2025,13.0,,,,,,,,,\r\n,,,,,,,,,,\r\n,,,,,,,,,,\r\nSeries ID,A3538881T,,,,,,,,,\r\n\"5676.0 Business Indicators, Australia\",,,,,,,,,,\r\n\"TABLE 5. INCOME FROM SALES OF GOODS AND SERVICES, Chain volume measures, Percentage change from previous quarter\",,,,,,,,,,","type":"text"},{"name":"data/Median weekly earnings in main job, by industry.csv","content":"\"Median weekly earnings in main job, by industry\"\n,\"Aug-19 ($)\",\"Aug-24 ($)\"\n\"Mining\",\"2,301\",\"2,593\"\n\"Electricity, gas, water and waste services\",\"1,600\",\"1,895\"\n\"Professional, scientific and technical services\",\"1,455\",\"1,841\"\n\"Financial and insurance services\",\"1,503\",\"1,750\"\n\"Public administration and safety\",\"1,498\",\"1,750\"\n\"Information Media and telecommunications\",\"1,349\",\"1,615\"\n\"Wholesale trade\",\"1,150\",\"1,518\"\n\"Construction\",\"1,290\",\"1,500\"\n\"Transport, postal and warehousing\",\"1,238\",\"1,500\"\n\"Education and training\",\"1,200\",\"1,500\"\n\"Manufacturing\",\"1,127\",\"1,400\"\n\"Rental, hiring and real estate services\",\"1,108\",\"1,400\"\n\"Administrative and support services\",\"950\",\"1,263\"\n\"Health care and social assistance\",\"1,000\",\"1,240\"\n\"Agriculture, forestry and fishing\",\"1,043\",\"1,200\"\n\"Other services\",\"961\",\"1,200\"\n\"Arts and recreation services\",\"898\",\"1,000\"\n\"Retail trade\",\"704\",\"893\"\n\"Accommodation and food services\",\"500\",\"650\"\n\n\"1. For more information on Industries, refer to Australian and New Zealand Standard Industrial Classification (ANZSIC)\"\n\n\"Source: Australian Bureau of Statistics, Employee earnings August 2024\"","type":"text"},{"name":"data/Rents, quarterly and annual movement (%).csv","content":"\"Rents, quarterly and annual movement (%)\"\n,\"Change from previous quarter (%)\",\"Annual change (%)\"\n\"Jun-15\",\"0.4\",\"1.9\"\n\"Sep-15\",\"0.3\",\"1.5\"\n\"Dec-15\",\"0.2\",\"1.2\"\n\"Mar-16\",\"0.1\",\"0.9\"\n\"Jun-16\",\"0.2\",\"0.7\"\n\"Sep-16\",\"0.3\",\"0.7\"\n\"Dec-16\",\"0.1\",\"0.6\"\n\"Mar-17\",\"0.1\",\"0.6\"\n\"Jun-17\",\"0.2\",\"0.6\"\n\"Sep-17\",\"0.2\",\"0.5\"\n\"Dec-17\",\"0.3\",\"0.7\"\n\"Mar-18\",\"0.2\",\"0.8\"\n\"Jun-18\",\"0.0\",\"0.6\"\n\"Sep-18\",\"0.2\",\"0.6\"\n\"Dec-18\",\"0.2\",\"0.5\"\n\"Mar-19\",\"0.1\",\"0.4\"\n\"Jun-19\",\"0.0\",\"0.4\"\n\"Sep-19\",\"0.1\",\"0.4\"\n\"Dec-19\",\"0.0\",\"0.2\"\n\"Mar-20\",\"0.1\",\"0.2\"\n\"Jun-20\",\"-1.3\",\"-1.2\"\n\"Sep-20\",\"-0.2\",\"-1.4\"\n\"Dec-20\",\"0.1\",\"-1.3\"\n\"Mar-21\",\"0.0\",\"-1.4\"\n\"Jun-21\",\"0.1\",\"0.0\"\n\"Sep-21\",\"0.2\",\"0.4\"\n\"Dec-21\",\"0.1\",\"0.4\"\n\"Mar-22\",\"0.6\",\"1.0\"\n\"Jun-22\",\"0.7\",\"1.6\"\n\"Sep-22\",\"1.3\",\"2.8\"\n\"Dec-22\",\"1.2\",\"4.0\"\n\"Mar-23\",\"1.6\",\"4.9\"\n\"Jun-23\",\"2.5\",\"6.7\"\n\"Sep-23\",\"2.2\",\"7.6\"\n\"Dec-23\",\"0.9\",\"7.3\"\n\"Mar-24\",\"2.1\",\"7.8\"\n\"Jun-24\",\"2.0\",\"7.3\"\n\"Sep-24\",\"1.6\",\"6.7\"\n\"Dec-24\",\"0.6\",\"6.4\"\n\"Mar-25\",\"1.2\",\"5.5\"\n\"Jun-25\",\"1.0\",\"4.5\"\n\n\"CRA change (a)\"\n\"CRA change (b)\"\n\n\"a. Commonwealth Rent Assistance (CRA) maximum rates increased by 15% on top of the usual biannual CPI indexation from 20 September 2023.\"\n\"b. Commonwealth Rent Assistance (CRA) maximum rates increased by 10% on top of the usual biannual CPI indexation from 20 September 2024.\"\n\n\"Source: Australian Bureau of Statistics, Consumer Price Index, Australia June Quarter 2025\"","type":"text"},{"name":"data/Total value of dwelling stock, Australia.csv","content":"\"Total value of dwelling stock, Australia\"\n,\"Total value of dwelling stock ($b)\"\n\"Jun-20\",\"7,251.1\"\n\"Sep-20\",\"7,469.6\"\n\"Dec-20\",\"7,848.9\"\n\"Mar-21\",\"8,302.3\"\n\"Jun-21\",\"8,726\"\n\"Sep-21\",\"9,325.8\"\n\"Dec-21\",\"9,914.2\"\n\"Mar-22\",\"10,094.1\"\n\"Jun-22\",\"10,028.7\"\n\"Sep-22\",\"9,730\"\n\"Dec-22\",\"9,773.3\"\n\"Mar-23\",\"9,803.4\"\n\"Jun-23\",\"10,101.6\"\n\"Sep-23\",\"10,252.7\"\n\"Dec-23\",\"10,563.9\"\n\"Mar-24\",\"10,736.1\"\n\"Jun-24\",\"11,000.3\"\n\"Sep-24\",\"11,053.4\"\n\"Dec-24\",\"11,319.5\"\n\"Mar-25\",\"11,350.2\"\n\"Jun-25\",\"11,564\"\n\n\"Source: Australian Bureau of Statistics, Total Value of Dwellings June Quarter 2025\"","type":"text"},{"name":"data/building_approvals_calendar_year.csv","content":"year,dwellings_approved\n2021,108674\n2022,191482\n2023,163822\n2024,173377\n2025,109714\n","type":"text"},{"name":"data/building_approvals_monthly.csv","content":"DATAFLOW,MEASURE,SECTOR,WORK_TYPE,BUILDING_TYPE,REGION_TYPE,REGION,FREQ,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE,UNIT_MULT,OBS_STATUS,OBS_COMMENT\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-06,13810,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-07,12870,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-08,14380,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-09,13963,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-10,15128,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-11,15807,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-12,11939,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-01,10994,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-02,13422,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-03,12962,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-04,13619,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-05,15946,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-06,12662,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-07,15901,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-08,14727,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-09,15025,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-10,17911,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-11,15895,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-12,14313,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-01,13157,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-02,16069,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-03,15647,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-04,14558,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-05,16672,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-06,16265,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-07,17346,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-02,18070,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-03,16481,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-04,14680,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-05,17284,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-06,16865,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-07,14313,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-08,18406,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-09,17585,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-10,15331,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-11,16425,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-12,15846,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-01,9835,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-02,13222,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-03,14522,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-04,11571,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-05,16775,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-07,19426,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-08,19498,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-09,19584,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-10,16358,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-11,17490,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-12,16318,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-01,10196,NUM,0,,\r\nDATAFLOW,MEASURE,SECTOR,WORK_TYPE,BUILDING_TYPE,REGION_TYPE,REGION,FREQ,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE,UNIT_MULT,OBS_STATUS,OBS_COMMENT\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-06,13810,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-07,12870,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-08,14380,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-09,13963,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-10,15128,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-11,15807,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-12,11939,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-01,10994,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-02,13422,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-03,12962,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-04,13619,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-05,15946,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-06,12662,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-07,15901,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-08,14727,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-09,15025,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-10,17911,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-11,15895,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2024-12,14313,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-01,13157,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-02,16069,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-03,15647,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-04,14558,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-05,16672,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-06,16265,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2025-07,17346,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-02,18070,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-03,16481,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-04,14680,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-05,17284,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-06,16865,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-07,14313,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-08,18406,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-09,17585,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-10,15331,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-11,16425,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-12,15846,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-01,9835,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-02,13222,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-03,14522,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-04,11571,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2023-05,16775,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-07,19426,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-08,19498,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-09,19584,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-10,16358,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-11,17490,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2021-12,16318,NUM,0,,\r\nABS:BA_SA2(2.0.0),1,9,TOT,TOT,AUS,AUS,M,2022-01,10196,NUM,0,,\r\n","type":"text"},{"name":"data/cwd_building_fy.csv","content":"fy_label,building_cvm_sa_m\n2018-19,52416.185\n2019-20,104266.023\n2020-21,104740.863\n2021-22,108765.65\n2022-23,122695.83800000002\n2023-24,135358.07799999998\n2024-25,142612.648\n","type":"text"},{"name":"data/cwd_building_quarterly.csv","content":"DATAFLOW,MEASURE,PRICE_ADJUSTMENT,SECTOR_OWN,CONSTRUCTION_TYPE,TSEST,REGION,FREQ,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE,UNIT_MULT,OBS_STATUS,OBS_COMMENT\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2020-Q2,27014841,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2020-Q3,26029653,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2024-Q4,35466742,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2019-Q2,25932872,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2019-Q3,25888095,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2019-Q4,25674465,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2023-Q4,34312492,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2024-Q1,33691031,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2024-Q2,34184774,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2021-Q1,25989575,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2021-Q2,27247355,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2021-Q3,26597548,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2021-Q4,27435137,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2022-Q1,27092575,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2022-Q2,27640390,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2022-Q3,29083292,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2022-Q4,29277491,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2023-Q1,31636655,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2023-Q2,32698400,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2023-Q3,33169781,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2025-Q1,34936751,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2025-Q2,37077060,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2020-Q4,25474280,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2024-Q3,35132095,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2019-Q1,26483313,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,04,20,AUS,Q,2020-Q1,25688622,AUD,3,,\r\n","type":"text"},{"name":"data/cwd_engineering_fy.csv","content":"fy_label,engineering_cvm_sa_m\n2018-19,76096.173\n2019-20,148543.90600000002\n2020-21,146825.11200000002\n2021-22,147820.257\n2022-23,150523.451\n2023-24,153508.43\n2024-25,155368.411\n","type":"text"},{"name":"data/cwd_engineering_quarterly.csv","content":"DATAFLOW,MEASURE,PRICE_ADJUSTMENT,SECTOR_OWN,CONSTRUCTION_TYPE,TSEST,REGION,FREQ,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE,UNIT_MULT,OBS_STATUS,OBS_COMMENT\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2020-Q2,36257818,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2020-Q3,35849080,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2024-Q4,38688401,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2019-Q2,37185630,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2019-Q3,37945186,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2019-Q4,36962840,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2023-Q4,38685183,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2024-Q1,38044467,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2024-Q2,38435027,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2021-Q1,36881855,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2021-Q2,37573801,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2021-Q3,37195124,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2021-Q4,37217579,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2022-Q1,37290750,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2022-Q2,36116804,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2022-Q3,37028874,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2022-Q4,37210430,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2023-Q1,37847649,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2023-Q2,38436498,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2023-Q3,38343753,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2025-Q1,38982028,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2025-Q2,39043503,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2020-Q4,36520376,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2024-Q3,38654479,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2019-Q1,38910543,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,03,20,AUS,Q,2020-Q1,37378062,AUD,3,,\r\n","type":"text"},{"name":"data/cwd_public_private_fy.csv","content":"fy_label,private_tot_cvm_sa_m,public_tot_cvm_sa_m\n2018-19,100190.35800000001,28366.579\n2019-20,193627.778,59189.432\n2020-21,190837.352,60715.803\n2021-22,190289.428,66199.898\n2022-23,198968.762,74250.528\n2023-24,207000.42,81865.057\n2024-25,212251.186,85732.4\n","type":"text"},{"name":"data/cwd_public_private_quarterly.csv","content":"DATAFLOW,MEASURE,PRICE_ADJUSTMENT,SECTOR_OWN,CONSTRUCTION_TYPE,TSEST,REGION,FREQ,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE,UNIT_MULT,OBS_STATUS,OBS_COMMENT\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2020-Q2,15050331,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2020-Q3,15180465,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2024-Q4,22041383,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2019-Q2,14140583,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2019-Q3,14507424,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2019-Q4,14841581,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2023-Q4,20694189,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2024-Q1,20416208,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2024-Q2,20830482,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2021-Q1,14751779,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2021-Q2,16101555,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2021-Q3,15403746,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2021-Q4,16552426,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2022-Q1,16902983,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2022-Q2,17340743,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2022-Q3,17630131,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2022-Q4,17840563,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2023-Q1,19217001,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2023-Q2,19562833,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2023-Q3,19924178,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2025-Q1,21005390,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2025-Q2,20915180,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2020-Q4,14682004,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2024-Q3,21770447,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2019-Q1,14225996,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,5,TOT,20,AUS,Q,2020-Q1,14790096,AUD,3,,\r\n","type":"text"},{"name":"data/cwd_public_private_quarterly_merged.csv","content":"TIME_PERIOD,public_m,private_m\n2019-Q1,14225.996000000001,51194.852\n2019-Q2,14140.583,48995.506\n2019-Q3,14507.424,49325.028\n2019-Q4,14841.581,47783.734000000004\n2020-Q1,14790.096,48265.425\n2020-Q2,15050.331,48253.591\n2020-Q3,15180.465,46696.479\n2020-Q4,14682.004,47303.963\n2021-Q1,14751.779,48124.267\n2021-Q2,16101.555,48712.643000000004\n2021-Q3,15403.746000000001,48386.645000000004\n2021-Q4,16552.426,48080.322\n2022-Q1,16902.983,47435.522000000004\n2022-Q2,17340.743,46386.939\n2022-Q3,17630.131,48472.557\n2022-Q4,17840.563000000002,48639.46\n2023-Q1,19217.001,50272.326\n2023-Q2,19562.833,51584.419\n2023-Q3,19924.178,51589.467000000004\n2023-Q4,20694.189000000002,52303.186\n2024-Q1,20416.208,51318.949\n2024-Q2,20830.482,51788.818\n2024-Q3,21770.447,52016.637\n2024-Q4,22041.383,52114.57\n2025-Q1,21005.39,52913.828\n2025-Q2,20915.18,55206.151\n","type":"text"},{"name":"data/cwd_total_fy.csv","content":"fy_label,cwd_total_cvm_sa_millions\n2018-19,128342.25\n2019-20,252506.849\n2020-21,251312.29700000002\n2021-22,256411.28499999997\n2022-23,273219.29099999997\n2023-24,288866.50800000003\n2024-25,297981.058\n","type":"text"},{"name":"data/cwd_total_quarterly.csv","content":"DATAFLOW,MEASURE,PRICE_ADJUSTMENT,SECTOR_OWN,CONSTRUCTION_TYPE,TSEST,REGION,FREQ,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE,UNIT_MULT,OBS_STATUS,OBS_COMMENT\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2020-Q2,63233674,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2020-Q3,61825293,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2024-Q4,74155143,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2019-Q2,63036765,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2019-Q3,63737996,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2019-Q4,62554686,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2023-Q4,72997676,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2024-Q1,71735497,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2024-Q2,72619801,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2021-Q1,62800782,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2021-Q2,64770929,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2021-Q3,63732293,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2021-Q4,64610632,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2022-Q1,64330414,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2022-Q2,63737946,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2022-Q3,66101866,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2022-Q4,66475167,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2023-Q1,69494581,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2023-Q2,71147677,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2023-Q3,71513534,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2025-Q1,73918778,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2025-Q2,76120563,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2020-Q4,61915293,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2024-Q3,73786574,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2019-Q1,65305485,AUD,3,,\r\nABS:CWD(1.0.0),M1,CVM,9,TOT,20,AUS,Q,2020-Q1,62980493,AUD,3,,\r\n","type":"text"},{"name":"data/gva.csv","content":"ï»¿Year,Construction (E) ;  Building construction ;,Construction (E) ;  Heavy and civil engineering construction ;,Construction (E) ;  Construction services ;,Construction (E) ;\r\nJun-20,38645,33924,89999,162472\r\nJun-21,38685,33623,89756,161967\r\nJun-22,39159,35203,93401,167662\r\nJun-23,38847,38102,95295,172244\r\nJun-24,39192,41723,94287,175202\r\nJun-25,39441,42893,93054,175388","type":"text"},{"name":"data/macro_indicators_final.csv","content":"\"year\",\"quarter\",\"date\",\"gdp_growth\",\"cpi_inflation\",\"unemployment_rate\",\"cash_rate\",\"gfcf_growth\",\"monetary_policy_stance\",\"fiscal_policy_stance\"\n2020,1,2020-01-01,-2.4,0.9,7.4,0.25,-8.2,\"Expansionary\",\"Expansionary\"\n2021,2,2020-02-01,1.9,2.9,5.1,0.1,6.1,\"Expansionary\",\"Expansionary\"\n2022,3,2020-03-01,2.7,7.8,3.5,2.85,3.8,\"Tightening\",\"Neutral\"\n2023,4,2020-04-01,1.8,5.4,4.1,4.35,1.2,\"Restrictive\",\"Neutral\"\n2024,1,2021-01-01,1.2,2.1,4.1,4.35,0.8,\"Restrictive\",\"Expansionary\"\n2025,2,2021-02-01,1.9,2.5,4.5,3.35,2.1,\"Easing\",\"Neutral\"\n2020,3,2021-03-01,-2.4,0.9,7.4,0.25,-8.2,\"Expansionary\",\"Expansionary\"\n2021,4,2021-04-01,1.9,2.9,5.1,0.1,6.1,\"Expansionary\",\"Expansionary\"\n2022,1,2022-01-01,2.7,7.8,3.5,2.85,3.8,\"Tightening\",\"Neutral\"\n2023,2,2022-02-01,1.8,5.4,4.1,4.35,1.2,\"Restrictive\",\"Neutral\"\n2024,3,2022-03-01,1.2,2.1,4.1,4.35,0.8,\"Restrictive\",\"Expansionary\"\n2025,4,2022-04-01,1.9,2.5,4.5,3.35,2.1,\"Easing\",\"Neutral\"\n2020,1,2023-01-01,-2.4,0.9,7.4,0.25,-8.2,\"Expansionary\",\"Expansionary\"\n2021,2,2023-02-01,1.9,2.9,5.1,0.1,6.1,\"Expansionary\",\"Expansionary\"\n2022,3,2023-03-01,2.7,7.8,3.5,2.85,3.8,\"Tightening\",\"Neutral\"\n2023,4,2023-04-01,1.8,5.4,4.1,4.35,1.2,\"Restrictive\",\"Neutral\"\n2024,1,2024-01-01,1.2,2.1,4.1,4.35,0.8,\"Restrictive\",\"Expansionary\"\n2025,2,2024-02-01,1.9,2.5,4.5,3.35,2.1,\"Easing\",\"Neutral\"\n2020,3,2024-03-01,-2.4,0.9,7.4,0.25,-8.2,\"Expansionary\",\"Expansionary\"\n2021,4,2024-04-01,1.9,2.9,5.1,0.1,6.1,\"Expansionary\",\"Expansionary\"\n2022,1,2025-01-01,2.7,7.8,3.5,2.85,3.8,\"Tightening\",\"Neutral\"\n2023,2,2025-02-01,1.8,5.4,4.1,4.35,1.2,\"Restrictive\",\"Neutral\"\n2024,3,2025-03-01,1.2,2.1,4.1,4.35,0.8,\"Restrictive\",\"Expansionary\"\n2025,4,2025-04-01,1.9,2.5,4.5,3.35,2.1,\"Easing\",\"Neutral\"\n","type":"text"}]
